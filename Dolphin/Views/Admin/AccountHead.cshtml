@model Dolphin.Models.Plot

@{
    ViewBag.Title = "AccountHead";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}


<style>
    #divload {
        width: 100%;
        height: 100%;
        position: fixed;
        z-index: 9999;
        background: url("../files/assets/images/login-gif-11.gif") no-repeat center center rgba(0,0,0,0.25);
    }

    .errortext {
        border: 1px solid red !important;
    }
</style>
@*<div class="loader" id="divload"></div>*@


@using (Html.BeginForm("AccountHead", "Admin", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    <div class="page-header">
        <div class="page-block">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <div class="page-header-title">
                        <h4 class="m-b-10">Account Head</h4>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="pcoded-inner-content">
        <div class="main-body">
            <div class="page-wrapper">
                <div class="page-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header">
                                    <h5>Account Head</h5>
                                    <p style="color: red">
                                        @TempData["msg"]
                                    </p>
                                </div>
                                <div class="card-block">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                Name <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @Placeholder = "Name", @onkeypress = "return onlyAlphabets();" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                Mobile No <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control", @Placeholder = "Mobile No", @Maxlength = "10", @onkeypress = "return isNumberKey(event);" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row ">
                                        <div class="col-md-6 form-group">
                                            <input type="submit" id="btnsave" class="btn btn-success" onclick="return Validation();" name="btnsave" value="Save">

                                            <a href="/Admin/AccountHeadList" class="btn btn-primary">Back To List</a><br /><br />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<script src="~/files/bower_components/jquery/js/jquery.min.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.12.0/themes/smoothness/jquery-ui.css">


<script>
    $(document).ready(function () {
        $("#divload").css({ 'display': 'none' });
    });
    function Validation() {
        $(".errortext").removeClass("errortext");
        if ($('#Name').val() == '') {
            $("#Name").addClass('errortext');
            $('#Name').focus();
            return false;
        }
        if ($('#Mobile').val() == '') {
            $("#Mobile").addClass('errortext');
            $('#Mobile').focus();
            return false;
        }
        return true;
    }



    function onlyAlphabets(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || (charCode == 32))
                return true;
            else
                return false;
        }
        catch (err) {
            alert(err.Description);
        }
    }


    function isNumberKey(evt) {

        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
</script>


<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }

    .successtext {
        border: 1px solid red !important;
        background-color: #808080 !important;
    }
</style>


