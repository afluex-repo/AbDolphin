@model Dolphin.Models.Setting

@{
    ViewBag.Title = "ChangeAssociatePassword";
 Layout = "~/Views/Shared/AdminLayout.cshtml";
}

 
@using (Html.BeginForm("ChangeAssociatePassword", "Setting", FormMethod.Post, new { @id = "form1" }))
{

    <div class="page-content">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center justify-content-between">
                    <h5 class="mb-0">Change Affiliate Password</h5>
                </div>
                <p style="color: red;display: block; margin-bottom:0px; text-align:center">
                    @TempData["Login"]
                </p>
            </div>
        </div>
        <div class="items">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <div class="form-group">
                                <label>  Login ID <span style="color: red">*</span><span id="username" class="pull-right"></span></label>
                                @Html.TextBoxFor(m => m.LoginId, new { @class = "form-control", @onchange = "return checkLoginID();" })
                                @Html.ValidationMessageFor(m => m.Password)
                            </div>
                        </div>
                        <div class="col-md-3 mb-3">
                            <div class="form-group">
                                <label> Old Password <span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Password)
                            </div>
                        </div>
                        <div class="col-md-3 mb-3">
                            <div class="form-group">
                                <label> New Password<span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.NewPassword, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-3 mb-3">
                            <div class="form-group">
                                <label> Confirm New Password<span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.ConfirmNewPassword, new { @class = "form-control", @onchange = "return Check();" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <input class="btn btn-success" type="submit" value="Change" id="btnChange" name="Change" onclick="return validate();" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
    function validate() {
        $(".errortext").removeClass("errortext");
        if ($('#LoginId').val() == '') {
            $("#LoginId").addClass('errortext');
            $('#LoginId').focus();
            return false;
        }
        if ($('#Password').val() == '') {
            $("#Password").addClass('errortext');
            $('#Password').focus();
            return false;
        }
        if ($('#NewPassword').val() == '') {
            $("#NewPassword").addClass('errortext');
            $('#NewPassword').focus();
            return false;
        }
        if ($('#ConfirmNewPassword').val() == '') {
            $("#ConfirmNewPassword").addClass('errortext');
            $('#ConfirmNewPassword').focus();
            return false;
        }

        return true;
    }
    function Check() {
        debugger
        if ($('#ConfirmNewPassword').val() != $('#NewPassword').val()) {

            alert("Confirm Password and new password should be same .")
            $('#ConfirmNewPassword').val('')
        }
    }
    function checkLoginID() {

        var sponsorID = $('#LoginId').val();
        $.ajax({
            url: '/TraditionalAssociate/GetSponsorName', type: 'post', dataType: 'json',
            data: { 'SponsorID': sponsorID },
            success: function (data) {
                if (data.Result == "yes") {
                    document.getElementById("username").innerHTML = data.SponsorName;
                    $("#SponsorName").val(data.SponsorName);
                    $("#UserID").val(data.UserID);
                    $("#SponsorName").removeClass('errortext');
                    $("#SponsorID").removeClass('errortext');

                }
                else if (data.Result == "no") {
                    document.getElementById("username").innerHTML = "";
                    $("#LoginId").val('');
                    $("#LoginId").addClass('errortext');
                    $("#LoginId").addClass('errortext');

                    $('#SponsorID').focus();
                    $('#SponsorID').val('');
                    alert("Invalid Login Id");
                }
            }

        });
    }
    function ValidLoginID() {
         debugger
            var value = $('#LoginId').val();
             
          
            $.ajax({
                url: "/Setting/CheckID",
                Type: "Get",
                DataType: "JSON",
                data: { LoginId: value },
                success: function (data) {
                   
                    if (data.Result == "yes") {
                        document.getElementById("username").innerHTML = data.DisplayName;
                        //alert("fdgfr");
                    }
                    else {
                        $("#LoginId").empty();
                        alert(data.Result);
                        
                    }
                }

            });

        }
    
</script>

 <style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>