@model Dolphin.Models.Master
@{
    ViewBag.Title = "NewsMaster";

    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

@using (Html.BeginForm("SaveNews", "Master", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    <div class="page-content">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center justify-content-between">
                    <h5 class="mb-0">News Master</h5>
                    <button class="btn btn-primary repeater-add-btn px-4"><a href="#!" class="text-white">Add New News</a></button>
                </div>
                <p style="color: red;display: block; margin-bottom:0px; text-align:center">
                    @TempData["News"]
                </p>
            </div>
        </div>
        <div class="items">
            <div class="card">
                <div class="card-body row">
                    <div class="col-sm-4 mb-3">
                        <label class="float-label">News For<span style="color:red">*</span></label>
                        @Html.DropDownListFor(m => m.NewsFor, new SelectList(ViewBag.NewsFor, "Value", "Text"), new { @class = "form-control form-select" })
                        <span class="form-bar"></span>
                    </div>

                    <div class="col-sm-4 mb-3">
                        <label class="float-label">Heading<span style="color:red">*</span></label>
                        @Html.TextBoxFor(m => m.NewsHeading, new { @class = "form-control", @Placeholder = "News Heading" })
                        <span class="form-bar"></span>
                    </div>
                    <div class="col-sm-4 mb-3">
                        <label class="float-label">Body<span style="color:red">*</span></label>
                        @Html.TextAreaFor(m => m.NewsBody, new { @class = "form-control", @Placeholder = "News Body" })
                        <span class="form-bar"></span>
                    </div>

                    <div class="col-md-6 mb-3">
                        @if (Model.NewsID == null)
                        {
                            <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Save" id="btnSave" name="btnSave" />
                        }
                        else
                        {
                            @Html.HiddenFor(m => m.NewsID, new { @Value = @Model.NewsID })
                            <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Update" id="btnUpdate" name="btnUpdate" />
                        }
                        <a class="btn btn-info text-white" href="/Master/NewsList">Back To List</a>
                    </div>
                </div>
            </div>
        </div>
    </div>


}

<script>
    function validateform() {
        $(".errortext").removeClass("errortext");


        if ($('#NewsHeading').val() == '') {
            $("#NewsHeading").addClass('errortext');
            $('#NewsHeading').focus();
            return false;
        }

        if ($('#NewsBody').val() == '') {
            $("#NewsBody").addClass('errortext');
            $('#NewsBody').focus();
            return false;
        }
        if ($('#NewsFor').val() == '') {
            $("#NewsFor").addClass('errortext');
            $('#NewsFor').focus();
            return false;
        }
        return true;
    }

    function isNumberOrDecimal(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function onlyAlphabets(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123))
                return true;
            else
                return false;
        }
        catch (err) {
            alert(err.Description);
        }
    }


</script>


<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>


