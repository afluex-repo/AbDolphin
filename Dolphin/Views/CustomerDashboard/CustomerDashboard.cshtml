@model Dolphin.Models.CustomerDashboard

@{
    ViewBag.Title = "CustomerDashboard";
    Layout = "~/Views/Shared/CustomerLayout.cshtml";
}

<html lang="en">
<body class="nav-md">
    @using (Html.BeginForm("CustomerDashboard", "CustomerDashboard", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
    {



        <div class="page-content">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items-center justify-content-between">
                        <h5 class="mb-0">Dashboard</h5>
                    </div>
                    <p style="color:red">
                        @TempData["Dashboard"]
                    </p>
                </div>
            </div>

            <!--end row-->
            <div class="row">
                <div class="col d-flex">
                    <div class="card radius-10 w-100">
                        <div class="card-header bg-transparent">
                            <div class="d-flex align-items-center">
                                <div>
                                    <h6 class="mb-0 py-2">Booking Details</h6>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="chart-container-1">
                                <canvas id="chart16"></canvas>
                            </div>
                        </div>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex bg-transparent justify-content-between align-items-center border-top">
                                Alloted Plots &nbsp;
                                <span class="badge rounded-pill" style="background-color: #B434FD;">&nbsp;</span>
                                Booked Plots &nbsp;
                                <span class="badge bg-gradient-ibiza rounded-pill">&nbsp;</span>
                            </li>
                            <li class="list-group-item d-flex bg-transparent justify-content-between align-items-center border-top">
                                Hold Plots&nbsp; &nbsp; &nbsp; &nbsp;
                                <span class="badge bg-warning rounded-pill">&nbsp;</span>
                                Total Booking &nbsp;<span class="badge bg-gradient-deepblue rounded-pill">&nbsp;</span>
                            </li>
                            <li class="list-group-item d-flex bg-transparent justify-content-between align-items-center">

                            </li>
                        </ul>
                    </div>
                </div>


                <div class="col d-flex">
                    <div class="card radius-10 w-100">
                        <div class="card-header bg-transparent">
                            <div class="d-flex align-items-center">
                                <div>
                                    <h6 class="mb-0 py-2">News</h6>
                                </div>
                            </div>
                        </div>
                        <div class="card-block">
                            <marquee direction="up" scrolldelay="300" style="padding: 15px;">
                                <div class="table-responsive" style="height:317px;">

                                    <table class="table table-hover">
                                        <thead>
                                            <tr></tr>
                                        </thead>
                                        <tbody>
                                            @if (Model != null)
                                            {
                                                if (Model.ListNEWS != null)
                                                {
                                                    int i = 1;
                                                    foreach (var Item in Model.ListNEWS)
                                                    {
                                                        <tr>

                                                            @Item.NewsBody

                                                        </tr>
                                                        i++;
                                                    }
                                                }
                                            }
                                        </tbody>
                                    </table>

                                </div>
                            </marquee>
                        </div>
                    </div>
                </div>
                @*<div class="col d-flex">
                    <div class="card radius-10 w-100">
                        <div class="card-header bg-transparent">
                            <div class="d-flex align-items-center">
                                <div>
                                    <h6 class="mb-0 py-2">News</h6>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="chart-container-1">
                                <canvas id="chart17"></canvas>
                            </div>
                        </div>
                        
                    </div>
                </div>*@
                





                <div class="col d-flex">
                    <div class="card radius-10 w-100">
                        <div class="card-header bg-transparent">
                            <div class="d-flex align-items-center">
                                <div>
                                    <h6 class="mb-0 py-2">Monthly Bookings</h6>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="chart-container-0">
                                <canvas id="chart6"></canvas>
                            </div>
                        </div>
                    </div>
                </div>





            </div>









                <div class="card">
                    <div class="card-body">
                        <h5>Due Installment</h5>
                        <div class="table-responsive">
                            <table id="example" class="table table-striped table-bordered table-hover" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>Sr No.</th>
                                        <th>Customer ID</th>
                                        <th>Customer Name</th>
                                        <th>Installment No.</th>
                                        <th>Installment Amount</th>
                                        <th>Plot Details</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null)
                                {
                                    if (Model.ListInstallment != null)
                                    {
                                        int i = 1;
                                        foreach (var Item in Model.ListInstallment)
                                        {
                                <tr>
                                    <td>@i</td>

                                    <td>@Item.CustomerLoginID</td>
                                    <td>@Item.CustomerName</td>
                                    <td>@Item.InstallmentNo</td>
                                    <td>@Item.InstallmentAmount</td>
                                    <td>@Item.PlotNumber</td>
                                </tr>
                                            i++;
                                        }
                                    }
                                }

                                </tbody>

                            </table>
                            @*<div class="text-end m-r-20">
                                <a href="/Plot/PlotBookingList" class="b-b-primary btn btn-dark text-white">View all Bookings</a>
                            </div>*@
                        </div>
                    </div>
                </div>

            </div>





        @*////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*@











    }
</body>
</html>







<script src="../vendor/jquery/jquery.min.js"></script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>


<script>
   window.onload = bindusers;
   var ctx1 = document.getElementById("chart16").getContext('2d');
   function bindusers() {
       $.ajax({
           type: 'POST',
           dataType: 'json',
           contentType: 'application/json',
           url: '/CustomerDashboard/GetGraphDetailsOfPlot',
           data: JSON.stringify(),
           success:
           function (d) {
               debugger;
               var TotalB = [];
               var TotalStatus = [];
               var t = JSON.parse(JSON.stringify(d));
               for (var i = 0; i < t.length; i++) {
                   TotalB.push(t[i].Total);
                   TotalStatus.push(t[i].Status);
               }

               var TotalBooking = ctx1.createLinearGradient(0, 0, 0, 300);
               TotalBooking.addColorStop(0, '#3366cc');
               TotalBooking.addColorStop(1, '#3366cc');

               var HoldPlot = ctx1.createLinearGradient(0, 0, 0, 300);
               HoldPlot.addColorStop(0, '#ff9900');
               HoldPlot.addColorStop(1, '#ff9900');


               var BookedPlot = ctx1.createLinearGradient(0, 0, 0, 300);
               BookedPlot.addColorStop(0, '#dc3912');
               BookedPlot.addColorStop(1, '#dc3912');

               var AllottedPlot = ctx1.createLinearGradient(0, 0, 0, 300);
               AllottedPlot.addColorStop(0, '#e470e4');
               AllottedPlot.addColorStop(1, '#e470e4');

               var myChart = new Chart(ctx1, {
                   type: 'pie',
                   data: {
                       labels: TotalStatus,
                       datasets: [{
                           backgroundColor: [
                             TotalBooking,
                             HoldPlot,
                             BookedPlot,
                             AllottedPlot
                           ],

                           hoverBackgroundColor: [
                             TotalBooking,
                             HoldPlot,
                             BookedPlot,
                             AllottedPlot
                           ],

                           data: TotalB
                       }]
                   },
                   options: {
                       maintainAspectRatio: false,
                       plugins: {
                           legend: {
                               display: false,
                               position: 'bottom'
                           }
                       }

                   }
               });

           },
           error: function () {
           }
       });

       var ctx = document.getElementById("chart6").getContext('2d');
       $.ajax({
           type: 'POST',
           dataType: 'json',
           contentType: 'application/json',
           url: '/CustomerDashboard/GetPlotBookingOnGraph',
           data: JSON.stringify(),
           success:
           function (d) {
               debugger;
               var TotalBookings = [];
               var Months = [];
               var t = JSON.parse(JSON.stringify(d));
               for (var i = 0; i < t.length; i++) {
                   TotalBookings.push(t[i].TotalBooking);
                   Months.push(t[i].Month);
               }

               var gradientStroke3 = ctx.createLinearGradient(0, 0, 0, 300);
               gradientStroke3.addColorStop(0, '#42e695');
               gradientStroke3.addColorStop(1, '#3bb2b8');

               var gradientStroke4 = ctx.createLinearGradient(0, 0, 0, 300);
               gradientStroke4.addColorStop(0, ' #7f00ff');
               gradientStroke4.addColorStop(0.5, '#e100ff');

               var myChart = new Chart(ctx, {
                   type: 'bar',
                   data: {
                       labels: Months,
                       //data: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Set", "Nov", "Dec"],
                       datasets: [{
                           label: 'Total Booking',
                           data: TotalBookings,
                           borderColor: gradientStroke3,
                           backgroundColor: gradientStroke3,
                           hoverBackgroundColor: gradientStroke3,
                           pointRadius: 0,
                           borderRadius: 20,
                           fill: false,
                           borderWidth: 1
                       },
                       //{
                       //    label: 'mobiles',
                       //    data: [50, 60, 40, 70, 35, 75, 30, 20],
                       //    bordercolor: gradientstroke4,
                       //    backgroundcolor: gradientstroke4,
                       //    hoverbackgroundcolor: gradientstroke4,
                       //    pointradius: 0,
                       //    borderradius: 20,
                       //    fill: false,
                       //    borderwidth: 1
                       //}

                       ]
                   },
                   options: {
                       maintainAspectRatio: false,
                       barPercentage: 0.5,
                       categoryPercentage: 0.8,
                       plugins: {
                           legend: {
                               display: true,
                               position: 'bottom'
                           }
                       },
                       scales: {
                           y: {
                               beginAtZero: true
                           }
                       }
                   }
               });

           },
           error: function () {
           }
       });


   }





</script>
@*<script type="text/javascript">

    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(bindusers);

    function bindusers() {
        $.ajax({
            type: 'POST',
            dataType: 'json',
            contentType: 'application/json',
            url: '/CustomerDashboard/GetGraphDetailsOfPlot',
            data: JSON.stringify(),
            success:
            function (response) {
                var datare = response;
                var data = new google.visualization.DataTable();

                data.addColumn('string', 'Status');
                data.addColumn('number', 'Total');
                for (var i = 0; i < datare.length; i++) {
                    data.addRow([datare[i].Status, parseInt(datare[i].Total)]);
                }

                var chart = new google.visualization.PieChart(document.getElementById('divusers'));
                var options = {
                    pieSliceText: 'value-and-percentage',
                    format: 'decimal',
                    is3D: true,
                    legend: { position: 'bottom' },
                    animation: {
                        startup: true,
                        duration: 1000,
                        easing: 'out',
                    }, chartArea: { width: "100%", height: "80%" }
                };

                chart.draw(data, options);

            },
            error: function () {
            }
        });
    }

</script>





<script type="text/javascript">

    google.charts.load("current", { packages: ["imagebarchart"] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        $.ajax({
            type: 'POST',
            dataType: 'json',
            contentType: 'application/json',
            url: '/CustomerDashboard/GetPlotBookingOnGraph',
            data: JSON.stringify(),
            success:
            function (response) {
                var datare = response;
                var data = new google.visualization.DataTable();

                data.addColumn('string', 'Month');
                data.addColumn('number', 'TotalBooking');
                for (var i = 0; i < datare.length; i++) {
                    data.addRow([datare[i].Month, parseInt(datare[i].TotalBooking)]);
                }

                var chart = new google.visualization.ImageBarChart(document.getElementById('divinvestment'));
                var options = {
                    pieSliceText: 'value-and-percentage',
                    format: 'decimal',
                    is3D: true,
                    legend: { position: 'bottom' },
                    animation: {
                        startup: true,
                        duration: 1000,
                        easing: 'out',
                    }, chartArea: { width: "100%", height: "80%" }
                };
                chart.draw(data, options);
            },
            error: function () {
            }
        });
    }

</script>*@
<script>
    $("#DivAssociates").click(function () {
        alert("ghgf")

    });
</script>

