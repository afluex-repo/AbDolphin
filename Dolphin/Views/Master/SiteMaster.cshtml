@model Dolphin.Models.Master
@{
    ViewBag.Title = "SiteMaster";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}


@using (Html.BeginForm("SaveSite", "Master", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    <div class="page-content">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center justify-content-between">
                    <h5 class="mb-0">Site Master</h5>
                </div>
                <p style="color: red;display: block; margin-bottom:0px; text-align:center">
                    @TempData["SiteMaster"]
                </p>
            </div>
        </div>

        <div class="items">
            <div class="card">
                <div class="card-body row">
                        <div class="col-sm-12 mb-3">
                            <h6>Add New Site</h6>
                        </div>
                        <div class="col-sm-4 mb-3">
                            <label class="float-label">Site Name<span style="color:red">*</span></label>
                            @Html.TextBoxFor(m => m.SiteName, new { @class = "form-control", @Placeholder = "Site Name" })
                            <span class="form-bar"></span>
                        </div>
                        <div class="col-sm-4 mb-3">
                            <label class="float-label">Site Type<span style="color:red">*</span></label>
                            @Html.DropDownListFor(m => m.SiteTypeID, new SelectList(ViewBag.ddlSiteType, "Value", "Text"), new { @class = "form-control form-select" })
                            <span class="form-bar"></span>
                        </div>
                        <div class="col-sm-4 mb-3">
                            <label class="float-label">Rate<span style="color:red">*</span></label>
                            @Html.TextBoxFor(m => m.Rate, new { @class = "form-control", @Placeholder = "Rate", @onkeypress = "return isNumberOrDecimal(event);" })
                            <span class="form-bar"></span>
                        </div>
                        <div class="col-sm-4 mb-3">
                            <label class="float-label">Unit<span style="color:red">*</span></label>
                            @Html.DropDownListFor(m => m.UnitID, new SelectList(ViewBag.ddlUnit, "Value", "Text"), new { @class = "form-control form-select" })
                            <span class="form-bar"></span>
                        </div>
                        <div class="col-sm-6 mb-3">
                            <label class="float-label">Location<span style="color:red">*</span></label>
                            @Html.TextAreaFor(m => m.Location, new { @class = "form-control", @Placeholder = "Location" })
                            <span class="form-bar"></span>
                        </div>
                    </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr class="table-active">
                                <th>Sr No.</th>
                                <th>PLC Name</th>
                                <th>Charges(%)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null)
                            {
                                if (Model.lstPLC != null)
                                {
                                    int i = 1;
                                    foreach (var Item in Model.lstPLC)
                                    {
                                        <tr class="text-left">
                                            <td>@i</td>
                                            <td>@Item.PLCName</td>
                                            <td>
                                                <input type="text" id="txtCharge_ @i" name="txtCharge_ @i" value="@Item.PLCCharge" onkeypress="return isNumberOrDecimal(event);" maxlength="12" /> <b>%</b>
                                                <input type="hidden" id="hdPLCID_ @i" name="hdPLCID_ @i" value="@Item.PLCID" />
                                                @*@Html.TextBoxFor(m => m.PLCCharge, new { @class = "form-control", @Placeholder = "Charge", @onkeypress="return isNumberOrDecimal(event);" })*@
                                            </td>
                                        </tr>
                                        i++;
                                    }
                                    <input type="hidden" id="hdRows" name="hdRows" value="@i" />
                                }
                            }
                        </tbody>
                        <tfoot>
                            <tr class="table-active">
                                <th>Sr No.</th>
                                <th>PLC Name</th>
                                <th>Charges(%)</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>

                <div class="row">
                    <div class="col-sm-6 mb-3">
                        <label class="float-label">Development Charge<span style="color:red">*</span></label>
                        @Html.TextBoxFor(m => m.DevelopmentCharge, new { @class = "form-control", @Placeholder = "Development Charge", @onkeypress = "return isNumberOrDecimal(event);" })
                        <span class="form-bar"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="float-label d-block">&nbsp;</label>
                        @if (Model.SiteID == null)
                        {
                            <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Save" id="btnSave" name="btnSave" />
                        }
                        else
                        {
                            @Html.HiddenFor(m => m.SiteID, new { @Value = @Model.SiteID })
                            <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Update" id="btnUpdate" name="btnUpdate" />
                        }
                        <a class="btn btn-info text-white" href="/Master/SiteList">Back To List</a>
                    </div>


                </div>

            </div>
        </div>
</div>

}

            <script>
                function validateform() {
                    $(".errortext").removeClass("errortext");
                    if ($('#SiteName').val() == '') {
                        $("#SiteName").addClass('errortext');
                        $('#SiteName').focus();
                        return false;
                    }
                    if ($('#SiteTypeID').val() == '0') {
                        $("#SiteTypeID").addClass('errortext');
                        $('#SiteTypeID').focus();
                        return false;
                    }
                    if ($('#Location').val() == '') {
                        $("#Location").addClass('errortext');
                        $('#Location').focus();
                        return false;
                    }
                    if ($('#Rate').val() == '') {
                        $("#Rate").addClass('errortext');
                        $('#Rate').focus();
                        return false;
                    }
                    if ($('#UnitID').val() == '0') {
                        $("#UnitID").addClass('errortext');
                        $('#UnitID').focus();
                        return false;
                    }
                    if ($('#DevelopmentCharge').val() == '') {
                        $("#DevelopmentCharge").addClass('errortext');
                        $('#DevelopmentCharge').focus();
                        return false;
                    }


                    return true;
                }

                function isNumberOrDecimal(evt) {
                    var charCode = (evt.which) ? evt.which : evt.keyCode;
                    if (charCode != 46 && charCode > 31
                      && (charCode < 48 || charCode > 57))
                        return false;

                    return true;
                }

                function onlyAlphabets(e, t) {
                    try {
                        if (window.event) {
                            var charCode = window.event.keyCode;
                        }
                        else if (e) {
                            var charCode = e.which;
                        }
                        else { return true; }
                        if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123))
                            return true;
                        else
                            return false;
                    }
                    catch (err) {
                        alert(err.Description);
                    }
                }

            </script>


            <style>
                .errortext {
                    border: 1px solid red !important;
                    background-color: #fff0f0 !important;
                }
            </style>
