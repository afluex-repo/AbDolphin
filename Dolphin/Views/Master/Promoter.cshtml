@model Dolphin.Models.Master

@{
    ViewBag.Title = "Promoter";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

@using (Html.BeginForm("Promoter", "Master", FormMethod.Post, new { @id = "form1", @enctype = "multipart/form-data",@autocomplete="off" }))
{

    <div class="page-content">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center justify-content-between">
                    <h5 class="mb-0">Promoter</h5>
                </div>
                <p style="color: red;display: block; margin-bottom:0px; text-align:center">
                    @*@TempData["PLC"]*@
                </p>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <div class="col-md-12">
                        <div class="col-md-4">
                            <label class="float-label">LoginID<span style="color:red">*</span></label>
                            @Html.TextBoxFor(m => m.LoginId, new { @class = "form-control", @Placeholder = "LoginId" })
                        </div>
                </div>
                
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr class="table-active">
                                <th>Associate LoginId<span style="color: red">*</span></th>
                                <th>Action<span style="color: red">*</span></th>
                            </tr>
                        </thead>
                        <tbody id="TextBoxContainer">
                            <tr class="mycontainer" id="mainrow">
                                <td>
                                    @Html.TextBoxFor(m => m.AssociateLoginId, new { @class = "form-control AssociateLoginId", @Placeholder = "LoginId" })
                                </td>
                                <td>
                                    <button type="button" id="add" class="btn btn-sm btn-success addRow">ADD</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="row mt-3">
                    <div class="col-md-12">
                        <button class="btn btn-success" type="button" id="btnSave" name="btnSave">SAVE</button>
                    </div>
                </div>
            </div>
        </div>


    </div>
}

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    $(document).ready(function () {
        let rowIndex = 1;

        $(document).on("click", ".addRow", function () {
            const currentRow = $(this).closest("tr");
            const currentLoginId = currentRow.find(".AssociateLoginId").val().trim();

            if (!currentLoginId) {
                alert("Please fill in the Associate LoginId before adding a new row.");
                return;
            }

            $(".AssociateLoginId").each(function () {
                if ($(this).val().trim() === currentLoginId) {
                    isDuplicate = true;
                    return false;
                }
            });

            let newRow = `<tr class="mycontainer">
                        <td>
                            <input type="text" name="AssociateLoginId[${rowIndex}]" class="AssociateLoginId form-control" placeholder="LoginId" value="${currentLoginId}" readonly />
                        </td>
                        <td>
                            <button type="button" class="btn btn-sm btn-danger removeRow">REMOVE</button>
                        </td>
                      </tr>`;

            $("#TextBoxContainer").append(newRow);
            rowIndex++;

            currentRow.find(".AssociateLoginId").val('');
        });

        $(document).on("click", ".removeRow", function () {
            const rowsCount = $("#TextBoxContainer tr").length;

            if (rowsCount > 1) {
                $(this).closest("tr").remove();
            } else {
                alert("At least one row is required.");
            }
        });

        $("#btnSave").on("click", function () {
            let loginIds = [];
            let hasEmptyField = false;

            $(".AssociateLoginId").each(function () {
                const value = $(this).val().trim();
                if (value) { 
                    loginIds.push(value);
                }
            });

            if (loginIds.length === 0) {
                alert("No valid Associate LoginId to save.");
                return;
            }

            var loginIdd = $("#LoginId").val();

            $.ajax({
                url: '/Master/Savepromoter', 
                type: 'POST',
                data: JSON.stringify({ loginIds: loginIds,LoginId: loginIdd }),
                contentType: 'application/json', 
                success: function (response) {
                    if (response.Result=="1") {
                        alert("Data saved successfully.");
                        location.reload();
                    } else {
                        alert("Error saving data.");
                        location.reload();
                    }
                },
                error: function () {
                    alert("An error occurred while saving data.");
                    location.reload();
                }
            });
        });
    });
</script>


@*<script>
    $(document).ready(function () {
        let rowIndex = 1;

        $(document).on("click", ".addRow", function () {
            const currentRow = $(this).closest("tr");
            const currentLoginId = currentRow.find(".AssociateLoginId").val().trim();

            if (!currentLoginId) {
                alert("Please fill in the Associate LoginId before adding a new row.");
                return;
            }

            $(".AssociateLoginId").each(function () {
                if ($(this).val().trim() === currentLoginId) {
                    isDuplicate = true;
                    return false;
                }
            });

            let newRow = `<tr class="mycontainer">
                        <td>
                            <input type="text" name="AssociateLoginId[${rowIndex}]" class="AssociateLoginId form-control" placeholder="LoginId" value="${currentLoginId}" readonly />
                        </td>
                        <td>
                            <button type="button" class="btn btn-sm btn-danger removeRow">REMOVE</button>
                        </td>
                      </tr>`;

            $("#TextBoxContainer").append(newRow);
            rowIndex++;

            currentRow.find(".AssociateLoginId").val('');
        });

        $(document).on("click", ".removeRow", function () {
            const rowsCount = $("#TextBoxContainer tr").length;

            if (rowsCount > 1) {
                $(this).closest("tr").remove();
            } else {
                alert("At least one row is required.");
            }
        });

        $("#btnSave").on("click", function () {
            let loginIds = [];
            let hasEmptyField = false;

            $(".AssociateLoginId").each(function () {
                const value = $(this).val().trim();
                if (!value) {
                    hasEmptyField = true;
                }
                loginIds.push(value);
            });

            $.ajax({
                url: '/Master/Savepromoter',  // URL to the backend controller
                type: 'POST',
                data: JSON.stringify({ loginIds: loginIds }),  // Send data as JSON
                contentType: 'application/json',  // Specify that the request body is JSON
                success: function (response) {
                    if (response.success) {
                        alert("Data saved successfully.");
                        // Optionally, you can clear the fields or reset the form here
                    } else {
                        alert("Error saving data.");
                    }
                },
                error: function () {
                    alert("An error occurred while saving data.");
                }
            });
        });
    });
</script>*@


<script>
    function validateform() {
        $(".errortext").removeClass("errortext");
        if ($('#LoginId').val() == '') {
            $("#LoginId").addClass('errortext');
            $('#LoginId').focus();
            return false;
        }

        return true;
    }
</script>

<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>
